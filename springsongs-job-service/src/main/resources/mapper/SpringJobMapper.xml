<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.springsongs.mapper.SpringJobMapper">
  <resultMap id="BaseResultMap" type="io.github.springsongs.domain.SpringJob">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="group_code" jdbcType="VARCHAR" property="groupCode" />
    <result column="group_title" jdbcType="VARCHAR" property="groupTitle" />
    <result column="task_title" jdbcType="VARCHAR" property="taskTitle" />
    <result column="task_class_title" jdbcType="VARCHAR" property="taskClassTitle" />
    <result column="cron_Expression" jdbcType="VARCHAR" property="cronExpression" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="created_user_id" jdbcType="VARCHAR" property="createdUserId" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_ip" jdbcType="VARCHAR" property="createdIp" />
    <result column="updated_user_id" jdbcType="VARCHAR" property="updatedUserId" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="updated_ip" jdbcType="VARCHAR" property="updatedIp" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    delete from spring_job
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.github.springsongs.domain.SpringJob">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    insert into spring_job (id, group_code, group_title, 
      task_title, task_class_title, cron_Expression, 
      status, remark, created_user_id, 
      created_by, created_on, created_ip, 
      updated_user_id, updated_by, updated_on, 
      updated_ip)
    values (#{id,jdbcType=VARCHAR}, #{groupCode,jdbcType=VARCHAR}, #{groupTitle,jdbcType=VARCHAR}, 
      #{taskTitle,jdbcType=VARCHAR}, #{taskClassTitle,jdbcType=VARCHAR}, #{cronExpression,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{createdUserId,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, #{createdIp,jdbcType=VARCHAR}, 
      #{updatedUserId,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP}, 
      #{updatedIp,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="io.github.springsongs.domain.SpringJob">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    update spring_job
    set group_code = #{groupCode,jdbcType=VARCHAR},
      group_title = #{groupTitle,jdbcType=VARCHAR},
      task_title = #{taskTitle,jdbcType=VARCHAR},
      task_class_title = #{taskClassTitle,jdbcType=VARCHAR},
      cron_Expression = #{cronExpression,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      created_user_id = #{createdUserId,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_ip = #{createdIp,jdbcType=VARCHAR},
      updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_ip = #{updatedIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    select id, group_code, group_title, task_title, task_class_title, cron_Expression, 
    status, remark, created_user_id, created_by, created_on, created_ip, updated_user_id, 
    updated_by, updated_on, updated_ip
    from spring_job
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    select id, group_code, group_title, task_title, task_class_title, cron_Expression, 
    status, remark, created_user_id, created_by, created_on, created_ip, updated_user_id, 
    updated_by, updated_on, updated_ip
    from spring_job
  </select>
  <select id="listByPage" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:28:43 CST 2020.
    -->
    select id, group_code, group_title, task_title, task_class_title, cron_Expression, 
    status, remark, created_user_id, created_by, created_on, created_ip, updated_user_id, 
    updated_by, updated_on, updated_ip
    from spring_job where status!=4
    <where>
    	<choose>
			<when test="record.groupCode != null and record.groupCode !=''">
				and group_code like concat(#{record.groupCode,jdbcType=VARCHAR},'%')
			</when>
			<when test="record.groupTitle != null and record.groupTitle !=''">
				and group_title like concat(#{record.groupTitle,jdbcType=VARCHAR},'%')
			</when>
			<when test="record.taskTitle != null and record.taskTitle !=''">
				and task_title like concat(#{record.taskTitle,jdbcType=VARCHAR},'%')
			</when>
		</choose>
    </where>
  </select>
  <select id="findByGroupCodeAndTaskClassTitle" resultMap="BaseResultMap">
    select id, group_code, group_title, task_title, task_class_title, cron_Expression, 
    status, remark, created_user_id, created_by, created_on, created_ip, updated_user_id, 
    updated_by, updated_on, updated_ip
    from spring_job where group_code=#{groupCode,jdbcType=VARCHAR} 
    and task_class_title=#{taskClassName,jdbcType=VARCHAR} 
  </select>
</mapper>