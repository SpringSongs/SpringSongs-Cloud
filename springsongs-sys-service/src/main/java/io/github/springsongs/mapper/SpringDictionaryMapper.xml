<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.github.springsongs.mapper.SpringDictionaryMapper">
  <resultMap id="BaseResultMap" type="io.github.springsongs.domain.SpringDictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sort_code" jdbcType="INTEGER" property="sortCode" />
    <result column="enable_edit" jdbcType="BIT" property="enableEdit" />
    <result column="deleted_status" jdbcType="TINYINT" property="deletedStatus" />
    <result column="enable_delete" jdbcType="TINYINT" property="enableDelete" />
    <result column="created_user_id" jdbcType="VARCHAR" property="createdUserId" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_on" jdbcType="TIMESTAMP" property="createdOn" />
    <result column="created_ip" jdbcType="VARCHAR" property="createdIp" />
    <result column="updated_user_id" jdbcType="VARCHAR" property="updatedUserId" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="updated_on" jdbcType="TIMESTAMP" property="updatedOn" />
    <result column="updated_ip" jdbcType="VARCHAR" property="updatedIp" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    delete from spring_dictionary
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.github.springsongs.domain.SpringDictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    insert into spring_dictionary (id, code, title, 
      description, sort_code, enable_edit, 
      deleted_status, enable_delete, created_user_id, 
      created_by, created_on, created_ip, 
      updated_user_id, updated_by, updated_on, 
      updated_ip)
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{sortCode,jdbcType=INTEGER}, #{enableEdit,jdbcType=BIT}, 
      #{deletedStatus,jdbcType=TINYINT}, #{enableDelete,jdbcType=TINYINT}, #{createdUserId,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=VARCHAR}, #{createdOn,jdbcType=TIMESTAMP}, #{createdIp,jdbcType=VARCHAR}, 
      #{updatedUserId,jdbcType=VARCHAR}, #{updatedBy,jdbcType=VARCHAR}, #{updatedOn,jdbcType=TIMESTAMP}, 
      #{updatedIp,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="io.github.springsongs.domain.SpringDictionary">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    update spring_dictionary
    set code = #{code,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sort_code = #{sortCode,jdbcType=INTEGER},
      enable_edit = #{enableEdit,jdbcType=BIT},
      deleted_status = #{deletedStatus,jdbcType=TINYINT},
      enable_delete = #{enableDelete,jdbcType=TINYINT},
      created_user_id = #{createdUserId,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_on = #{createdOn,jdbcType=TIMESTAMP},
      created_ip = #{createdIp,jdbcType=VARCHAR},
      updated_user_id = #{updatedUserId,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      updated_on = #{updatedOn,jdbcType=TIMESTAMP},
      updated_ip = #{updatedIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    select id, code, title, description, sort_code, enable_edit, deleted_status, enable_delete, 
    created_user_id, created_by, created_on, created_ip, updated_user_id, updated_by, 
    updated_on, updated_ip
    from spring_dictionary
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    select id, code, title, description, sort_code, enable_edit, deleted_status, enable_delete, 
    created_user_id, created_by, created_on, created_ip, updated_user_id, updated_by, 
    updated_on, updated_ip
    from spring_dictionary
  </select>
  <update id="setDelete" parameterType="java.util.List">
	  upate spring_dictionary set deleted_status=1
	  <where>
	  		<if test="ids!=null and ids.size()>=1">
	            <foreach collection="ids" item="id" open="AND id in (" separator="," close=")">
	                #{id,jdbcType=VARCHAR}
	            </foreach>
	        </if>
	  </where>
  </update>
  <select id="listByPage" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 14 16:39:39 CST 2020.
    -->
    select id, code, title, description, sort_code, enable_edit, deleted_status, enable_delete, 
    created_user_id, created_by, created_on, created_ip, updated_user_id, updated_by, 
    updated_on, updated_ip
    from spring_dictionary where deleted_status=0
    	<choose>
			<when test="code != null and code !=''">
				and code like concat(#{code,jdbcType=VARCHAR},'%')
			</when>
			<when test="title != null and title !=''">
				and title like concat(#{title,jdbcType=VARCHAR},'%')
			</when>
			<when test="description != null and description !=''">
				and description like concat(#{description,jdbcType=VARCHAR},'%')
			</when>
		</choose>
  </select>
  <select id="findInIds">
	select id, code, title, description, sort_code, enable_edit, deleted_status, enable_delete, 
    created_user_id, created_by, created_on, created_ip, updated_user_id, updated_by, 
    updated_on, updated_ip
    from spring_dictionary where deleted_status=0
	 
	  		<if test="ids!=null and ids.size()>=1">
	            <foreach collection="ids" item="id" open="AND id in (" separator="," close=")">
	                #{id,jdbcType=VARCHAR}
	            </foreach>
	        </if>
	  
  </select>
</mapper>