package io.github.springsongs.enumeration;

import io.github.springsongs.utils.Constant;

public enum ResultCode {
	SELECT_SUCCESSED(200, Constant.SELECT_SUCCESSED), SAVE_SUCCESSED(200, Constant.SAVE_SUCCESSED),
	UPDATE_SUCCESSED(200, Constant.UPDATE_SUCCESSED), DELETE_SUCCESSED(200, Constant.DELETE_SUCCESSED),
	HASED_CHILD_IDS_CANNOT_DELETE(500, Constant.HASED_CHILD_IDS_CANNOT_DELETE),
	INFO_NOT_FOUND(404, Constant.INFO_NOT_FOUND), SYSTEM_ERROR(500, Constant.SYSTEM_ERROR),
	FILE_UPLOAD_SECCUESSED(200, Constant.FILE_UPLOAD_SECCUESSED), INFO_CAN_NOT_EDIT(500, Constant.INFO_CAN_NOT_EDIT),
	INFO_CAN_NOT_DELETE(500, Constant.INFO_CAN_NOT_DELETE), ACCOUNT_HAS_REGISTER(500, Constant.ACCOUNT_HAS_REGISTER),
	PASSWORD_CAN_NOT_EMPTY(500, Constant.PASSWORD_CAN_NOT_EMPTY),
	PARAMETER_MORE_1000(500, Constant.PARAMETER_MORE_1000), SESSION_HAS_GONE(403, Constant.SESSION_HAS_GONE),
	FORBIDDEN(500, Constant.AUTH_FORBIDDEN), PARAMETER_NOT_NULL_ERROR(500, Constant.PARAMETER_NOT_NULL_ERROR),
	USER_NOT_FOUND(500, Constant.USER_NOT_FOUND), BAD_CREDENTIALSEXCEPTION(500, Constant.BAD_CREDENTIALSEXCEPTION),
	LOCKED_EXCEPTION(500, Constant.LOCKED_EXCEPTION), ACCOUNT_EXPIRE_EXCEPTION(500, Constant.ACCOUNT_EXPIRE_EXCEPTION),
	ACCOUNT_DISABLED_EXCEPTION(500, Constant.ACCOUNT_DISABLED_EXCEPTION),
	CREDENTIALS_EXCPIRE_EXCEPTION(500, Constant.CREDENTIALS_EXCPIRE_EXCEPTION), LOGIN_FAIL(500, Constant.LOGIN_FAIL),
	LOGIN_SUCCESSED(200, Constant.LOGIN_SUCCESSED), LOGOUT_SUCCESSED(200, Constant.LOGOUT_SUCCESSED),
	DATA_EXIST(500, Constant.DATA_EXIST), ADD_TASK_FAIL(500, Constant.ADD_TASK_FAIL),
	TASK_HADED_SUBMIT(500, Constant.TASK_HADED_SUBMIT), UPDATE_TASK_FAIL(500, Constant.UPDATE_TASK_FAIL),
	PAUSE_TASK_FAIL(500, Constant.PAUSE_TASK_FAIL), DELETE_TASK_FAIL(500, Constant.DELETE_TASK_FAIL),
	RESUME_TASK_FAIL(500, Constant.RESUME_TASK_FAIL), MODEL_NOT_EXIST(500, Constant.MODEL_NOT_EXIST),
	EXPORT_SUCCESSED(200, Constant.EXPORT_SUCCESSED), TASK_HADED_CONFIG(500, Constant.TASK_HADED_CONFIG),;
	final int code;
	final String message;

	public int getCode() {
		return code;
	}

	public String getMessage() {
		return message;
	}

	private ResultCode(int code, String message) {
		this.code = code;
		this.message = message;
	}

}
